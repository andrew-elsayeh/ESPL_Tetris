#pragma once
#include <stdint.h>

// =============================================================================
// Pieces Definitions
// =============================================================================
static uint16_t pusTetriminos [7 /*kind */ ][4 /* rotation */ ][5 /* horizontal blocks */ ][5 /* vertical blocks */ ] =
{
// O
  {
   {
    {0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0},
    {0, 0, 1, 1, 0},
    {0, 0, 1, 1, 0},
    {0, 0, 0, 0, 0}
    },
   {
    {0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0},
    {0, 0, 1, 1, 0},
    {0, 0, 1, 1, 0},
    {0, 0, 0, 0, 0}
    },
   {
    {0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0},
    {0, 0, 1, 1, 0},
    {0, 0, 1, 1, 0},
    {0, 0, 0, 0, 0}
    },
   {
    {0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0},
    {0, 0, 1, 1, 0},
    {0, 0, 1, 1, 0},
    {0, 0, 0, 0, 0}
    }
   },
 
// I
  {
   {
    {0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0},
    {0, 2, 2, 2, 2},
    {0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0}
    },
   {
    {0, 0, 0, 0, 0},
    {0, 0, 2, 0, 0}, 
    {0, 0, 2, 0, 0},
    {0, 0, 2, 0, 0},
    {0, 0, 2, 0, 0}
    },
   {
    {0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0},
    {2, 2, 2, 2, 0},
    {0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0}
    },
   {
    {0, 0, 2, 0, 0},
    {0, 0, 2, 0, 0},
    {0, 0, 2, 0, 0},
    {0, 0, 2, 0, 0},
    {0, 0, 0, 0, 0}
    }
   }
  ,
// L
  {
   {
    {0, 0, 0, 0, 0},
    {0, 0, 3, 0, 0},
    {0, 0, 3, 0, 0},
    {0, 0, 3, 3, 0},
    {0, 0, 0, 0, 0}
    },
   {
    {0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0},
    {0, 3, 3, 3, 0},
    {0, 3, 0, 0, 0},
    {0, 0, 0, 0, 0}
    },
   {
    {0, 0, 0, 0, 0},
    {0, 3, 3, 0, 0},
    {0, 0, 3, 0, 0},
    {0, 0, 3, 0, 0},
    {0, 0, 0, 0, 0}
    },
   {
    {0, 0, 0, 0, 0},
    {0, 0, 0, 3, 0},
    {0, 3, 3, 3, 0},
    {0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0}
    }
   },
// J
  {
   {
    {0, 0, 0, 0, 0},
    {0, 0, 4, 0, 0},
    {0, 0, 4, 0, 0},
    {0, 4, 4, 0, 0},
    {0, 0, 0, 0, 0}
    },
   {
    {0, 0, 0, 0, 0},
    {0, 4, 0, 0, 0},
    {0, 4, 4, 4, 0},
    {0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0}
    },
   {
    {0, 0, 0, 0, 0},
    {0, 0, 4, 4, 0},
    {0, 0, 4, 0, 0},
    {0, 0, 4, 0, 0},
    {0, 0, 0, 0, 0}
    },
   {
    {0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0},
    {0, 4, 4, 4, 0},
    {0, 0, 0, 4, 0},
    {0, 0, 0, 0, 0}
    }
   },
// Z
  {
   {
    {0, 0, 0, 0, 0},
    {0, 0, 0, 5, 0},
    {0, 0, 5, 5, 0},
    {0, 0, 5, 0, 0},
    {0, 0, 0, 0, 0}
    },
   {
    {0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0},
    {0, 5, 5, 0, 0},
    {0, 0, 5, 5, 0},
    {0, 0, 0, 0, 0}
    },
   {
    {0, 0, 0, 0, 0},
    {0, 0, 5, 0, 0},
    {0, 5, 5, 0, 0},
    {0, 5, 0, 0, 0},
    {0, 0, 0, 0, 0}
    },
 
 
 
   {
    {0, 0, 0, 0, 0},
    {0, 5, 5, 0, 0},
    {0, 0, 5, 5, 0},
    {0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0}
    }
   },
// S
  {
   {
    {0, 0, 0, 0, 0},
    {0, 0, 6, 0, 0},
    {0, 0, 6, 6, 0},
    {0, 0, 0, 6, 0},
    {0, 0, 0, 0, 0}
    },
   {
    {0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0},
    {0, 0, 6, 6, 0},
    {0, 6, 6, 0, 0},
    {0, 0, 0, 0, 0}
    },
   {
    {0, 0, 0, 0, 0},
    {0, 6, 0, 0, 0},
    {0, 6, 6, 0, 0},
    {0, 0, 6, 0, 0},
    {0, 0, 0, 0, 0}
    },
   {
    {0, 0, 0, 0, 0},
    {0, 0, 6, 6, 0},
    {0, 6, 6, 0, 0},
    {0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0}
    }
   },
// T
  {
   {
    {0, 0, 0, 0, 0},
    {0, 0, 7, 0, 0},
    {0, 0, 7, 7, 0},
    {0, 0, 7, 0, 0},
    {0, 0, 0, 0, 0}
    },
   {
    {0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0},
    {0, 7, 7, 7, 0},
    {0, 0, 7, 0, 0},
    {0, 0, 0, 0, 0}
    },
   {
    {0, 0, 0, 0, 0},
    {0, 0, 7, 0, 0},
    {0, 7, 7, 0, 0},
    {0, 0, 7, 0, 0},
    {0, 0, 0, 0, 0}
    },
   {
    {0, 0, 0, 0, 0},
    {0, 0, 7, 0, 0},
    {0, 7, 7, 7, 0},
    {0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0}
    }
   }
};


typedef struct tetrimino Tetrimino_t;

/**
 * @brief Structure of a tetrimino
 *
 */
struct tetrimino
{
  uint16_t (*prvGetBlock)(int pPiece, int pRotation, int pX, int pY);
};

/**
 * @brief Initializes a tetrimino object
 *
 */
void tetrimino_init(Tetrimino_t *tetrimino);